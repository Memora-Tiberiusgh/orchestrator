name: Deploy Services

on:
  repository_dispatch:
    types: [frontend-updated, backend-updated]

permissions:
  contents: read
  packages: read

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout orchestrator config
        uses: actions/checkout@v4

      - name: Create .env file directly
        run: |
          echo "ðŸ“¦ Creating .env file..."

          # Create .env from secret
          cat > .env << 'EOF'
          ${{ secrets.ENV_FILE }}
          EOF

          # Append image variables
          echo "FRONTEND_IMAGE=ghcr.io/memora-tiberiusgh/frontend:latest" >> .env
          echo "BACKEND_IMAGE=ghcr.io/memora-tiberiusgh/backend:latest" >> .env

          # Update with new image if this is a service update
          if [ "${{ github.event.client_payload.service }}" = "frontend" ]; then
            sed -i "s|FRONTEND_IMAGE=.*|FRONTEND_IMAGE=${{ github.event.client_payload.image }}|" .env
          elif [ "${{ github.event.client_payload.service }}" = "backend" ]; then
            sed -i "s|BACKEND_IMAGE=.*|BACKEND_IMAGE=${{ github.event.client_payload.image }}|" .env
          fi

          echo "Created .env file (Firebase vars hidden for security)"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Deploy updated services
        run: |
          # Pull latest images
          docker-compose pull

          # Stop and remove containers, then recreate (optional)
          docker-compose down
          docker-compose up -d

          echo "âœ… Deployment completed!"

      - name: Cleanup sensitive files
        run: |
          rm .env
