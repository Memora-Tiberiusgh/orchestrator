name: Deploy Services

on:
  repository_dispatch:
    types: [frontend-updated, backend-updated]

permissions:
  contents: read
  packages: read

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout orchestrator config
        uses: actions/checkout@v4

      - name: Create .env file directly
        run: |
          echo "ðŸ“¦ Creating .env file..."

          # Set default images
          FRONTEND_IMG="ghcr.io/memora-tiberiusgh/frontend:latest"
          BACKEND_IMG="ghcr.io/memora-tiberiusgh/backend:latest"

          # Update with new image if this is a service update
          if [ "${{ github.event.client_payload.service }}" = "frontend" ]; then
            FRONTEND_IMG="${{ github.event.client_payload.image }}"
          elif [ "${{ github.event.client_payload.service }}" = "backend" ]; then
            BACKEND_IMG="${{ github.event.client_payload.image }}"
          fi

          cat > .env << EOF
          FRONTEND_IMAGE=${FRONTEND_IMG}
          BACKEND_IMAGE=${BACKEND_IMG}
          EOF

          echo "Created .env file:"
          cat .env

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Deploy updated services
        run: |
          echo "ðŸš€ Deploying services..."
          docker-compose pull
          docker-compose up -d
          echo "âœ… Deployment completed!"

      - name: Cleanup sensitive files
        run: |
          rm .env
