stages:
 - deploy

deploy:
 stage: deploy
 image: docker:20.10.16
 before_script:
 - apk add --no-cache openssh-client git
 - mkdir -p ~/.ssh
 - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
 - chmod 600 ~/.ssh/id_rsa
 - eval $(ssh-agent -s)
 - ssh-add ~/.ssh/id_rsa
 - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
 script:
 - |
   ssh $SSH_USER@$SSH_HOST "
   # Use absolute paths to avoid directory navigation issues
   echo 'Updating docker-compose-config...'
   cd /var/www/html/memora/docker-compose-config && git pull
   
   echo 'Updating memora_back_end...'
   cd /var/www/html/memora/memora_back_end && git pull
   
   echo 'Updating memora_front_end...'
   cd /var/www/html/memora/memora_front_end && git pull
   
   # Navigate to orchestration directory and check for the compose file
   echo 'Starting application with docker compose...'
   cd /var/www/html/memora/docker-compose-config
   ls -la
   
   # Check for compose file and run if it exists
   if [ -f docker-compose.yaml ]; then
     echo 'Found docker-compose.yaml'
     docker compose -f docker-compose.yaml up -d --build
   elif [ -f docker-compose.yml ]; then
     echo 'Found docker-compose.yml'
     docker compose -f docker-compose.yml up -d --build
   else
     echo 'ERROR: No docker-compose file found!'
     ls -la
   fi
   "
 only:
 - main