stages:
  - deploy

deploy:
  stage: deploy
  image: docker:20.10.16
  before_script:
    - apk add --no-cache openssh-client git
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SSH_HOST > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  script:
    # SSH to server and set up project structure
    - |
      ssh $SSH_USER@$SSH_HOST "mkdir -p $DEPLOY_PATH"
    
    # Copy docker-compose.yml to the server
    - scp docker-compose.yml $SSH_USER@$SSH_HOST:$DEPLOY_PATH/
    
    # Clone/pull repositories and deploy
    - |
      ssh $SSH_USER@$SSH_HOST "
        # Create parent directory for all repos
        mkdir -p $DEPLOY_PATH/memora
        cd $DEPLOY_PATH/memora
        
        # Clone/pull orchestrating repo
        if [ ! -d ./memora_orchestration ]; then
          git clone $ORCHESTRATING_REPO_URL ./memora_orchestration
        else
          cd ./memora_orchestration && git pull && cd ..
        fi
        
        # Clone/pull backend repo
        if [ ! -d ./memora_back_end ]; then
          git clone $BACKEND_REPO_URL ./memora_back_end
        else
          cd ./memora_back_end && git pull && cd ..
        fi
        
        # Clone/pull frontend repo
        if [ ! -d ./memora_front_end ]; then
          git clone $FRONTEND_REPO_URL ./memora_front_end
        else
          cd ./memora_front_end && git pull && cd ..
        fi
        
        # Copy docker-compose.yml to the directory structure
        cp $DEPLOY_PATH/docker-compose.yml $DEPLOY_PATH/memora/memora_orchestration/
        
        # Navigate to orchestration directory and start the application
        cd $DEPLOY_PATH/memora/memora_orchestration
        docker-compose up -d --build
      "
  environment:
    name: production
  only:
    - main